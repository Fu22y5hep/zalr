name: Run All Stages Daily

on:
  schedule:
    # Run at 2:00 AM UTC daily
    - cron: '0 2 * * *'
  workflow_dispatch:  # Allow manual triggering
  push:  # Temporarily add push trigger for testing
    branches:
      - main

jobs:
  run-all-stages:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Debug - List repository contents
        run: |
          echo "Current directory: $(pwd)"
          echo "Repository contents:"
          ls -la
          echo "Command files:"
          ls -la semantis_app/management/commands/
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      
      - name: Install uv
        uses: astral-sh/setup-uv@v5
      
      - name: Install dependencies with uv
        run: |
          uv venv
          uv pip install -r requirements.txt
          
      - name: Install project in development mode
        run: |
          # Check if setup.py exists and install if it does
          if [ -f "setup.py" ]; then
            uv pip install -e .
            echo "Project installed in development mode"
          else
            echo "No setup.py found, skipping project installation"
          fi
      
      - name: List available Django commands
        run: |
          # Activate the virtual environment
          . .venv/bin/activate
          echo "Available Django commands:"
          python manage.py help
          echo "Checking for stage1_scrape_judgments command:"
          python manage.py help | grep stage1_scrape_judgments || true
      
      - name: Run all stages for current year
        run: |
          CURRENT_YEAR=$(date +%Y)
          if [ -f "run_all_stages.py" ]; then
            echo "Using run_all_stages.py in root directory"
            . .venv/bin/activate  # Activate venv explicitly
            python run_all_stages.py --year $CURRENT_YEAR
          else
            echo "ERROR: run_all_stages.py not found in expected location"
            exit 1
          fi
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
          SUPABASE_PUBLIC_KEY: ${{ secrets.SUPABASE_PUBLIC_KEY }}
          DJANGO_SECRET_KEY: ${{ secrets.DJANGO_SECRET_KEY }}
      
      - name: Verify logs directory
        if: always()
        run: |
          mkdir -p logs
          ls -la logs/
      
      - name: Upload logs as artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: process-logs
          path: logs/
          retention-days: 7 