name: Run All Stages Daily

on:
  schedule:
    # Run at 2:00 AM UTC daily
    - cron: '0 2 * * *'
  workflow_dispatch:  # Allow manual triggering
  push:  # Temporarily add push trigger for testing
    branches:
      - main

jobs:
  run-all-stages:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Debug - List repository contents
        run: |
          echo "Current directory: $(pwd)"
          echo "Repository contents:"
          ls -la
          echo "Stages directory:"
          ls -la stages/
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      
      - name: Install uv
        uses: astral-sh/setup-uv@v5
      
      - name: Install dependencies with uv
        run: |
          uv venv
          uv pip install -r requirements.txt
          
      - name: Install project in development mode
        run: |
          # Check if setup.py exists and install if it does
          if [ -f "setup.py" ]; then
            uv pip install -e .
            echo "Project installed in development mode"
          else
            echo "No setup.py found, skipping project installation"
          fi
      
      - name: Run stages using zalr_cli.py
        run: |
          CURRENT_YEAR=$(date +%Y)
          # Activate virtual environment
          . .venv/bin/activate
          
          if [ -f "stages/zalr_cli.py" ]; then
            echo "Using zalr_cli.py to run stages"
            python stages/zalr_cli.py run-all --year $CURRENT_YEAR
          elif [ -f "stages/zalr" ]; then
            echo "Using zalr script to run stages"
            ./stages/zalr run-all --year $CURRENT_YEAR
          else
            echo "ERROR: Neither zalr_cli.py nor zalr script found"
            echo "Available files in stages directory:"
            ls -la stages/
            exit 1
          fi
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
          SUPABASE_PUBLIC_KEY: ${{ secrets.SUPABASE_PUBLIC_KEY }}
          DJANGO_SECRET_KEY: ${{ secrets.DJANGO_SECRET_KEY }}
      
      - name: Verify logs directory
        if: always()
        run: |
          mkdir -p logs
          ls -la logs/
      
      - name: Upload logs as artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: process-logs
          path: logs/
          retention-days: 7 