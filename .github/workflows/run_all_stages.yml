name: Run All Stages Daily

on:
  schedule:
    # Run at 2:00 AM UTC daily
    - cron: '0 2 * * *'
  workflow_dispatch:  # Allow manual triggering
  push:  # Temporarily add push trigger for testing
    branches:
      - main

jobs:
  run-all-stages:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Debug - List repository structure
        run: |
          echo "Current directory: $(pwd)"
          echo "Repository root contents:"
          ls -la
          echo "Checking stages directory:"
          if [ -d "stages" ]; then
            echo "Stages directory exists, listing contents:"
            ls -la stages/
            if [ -f "stages/zalr" ]; then
              echo "stages/zalr exists, checking permissions:"
              ls -la stages/zalr
            else
              echo "stages/zalr does not exist!"
            fi
            if [ -f "stages/zalr_cli.py" ]; then
              echo "stages/zalr_cli.py exists"
            else
              echo "stages/zalr_cli.py does not exist!"
            fi
          else
            echo "Stages directory does not exist!"
            echo "Searching for zalr files:"
            find . -name "zalr*" | sort
          fi
          echo "Checking for stage1_scrape_judgments.py:"
          find . -name "stage1_scrape_judgments.py" | sort
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      
      - name: Install uv
        uses: astral-sh/setup-uv@v5
      
      - name: Install dependencies with uv
        run: |
          uv venv
          uv pip install -r requirements.txt
          
      - name: Install project in development mode
        run: |
          # Check if setup.py exists and install if it does
          if [ -f "setup.py" ]; then
            uv pip install -e .
            echo "Project installed in development mode"
          else
            echo "No setup.py found, skipping project installation"
          fi
      
      - name: Make zalr_cli.py and stage scripts executable
        run: |
          # Make sure zalr script is executable
          if [ -f "stages/zalr" ]; then
            chmod +x stages/zalr
          fi
          
          # Also force add execution permissions to any stage scripts
          find stages -name "*.py" -exec chmod +x {} \;
      
      - name: Run pipeline using helper script
        run: |
          CURRENT_YEAR=$(date +%Y)
          # Activate virtual environment
          . .venv/bin/activate
          
          # Make the run_pipeline.py script executable
          chmod +x run_pipeline.py
          
          # Run the pipeline script which will try all available methods
          python run_pipeline.py $CURRENT_YEAR
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
          SUPABASE_PUBLIC_KEY: ${{ secrets.SUPABASE_PUBLIC_KEY }}
          DJANGO_SECRET_KEY: ${{ secrets.DJANGO_SECRET_KEY }}
      
      - name: Verify logs directory
        if: always()
        run: |
          mkdir -p logs
          ls -la logs/
      
      - name: Upload logs as artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: process-logs
          path: logs/
          retention-days: 7 